node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16640
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000A\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16640
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "Add"
  input: "clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "audio_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 16640
        }
      }
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "audio_input"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "strided_slice"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.037688918
      }
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.037688918
      }
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "freqconv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "freqconv/weights/Initializer/random_uniform/max"
  input: "freqconv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "freqconv/weights/Initializer/random_uniform/RandomUniform"
  input: "freqconv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "freqconv/weights/Initializer/random_uniform"
  op: "Add"
  input: "freqconv/weights/Initializer/random_uniform/mul"
  input: "freqconv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "freqconv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "freqconv/weights/Assign"
  op: "Assign"
  input: "freqconv/weights"
  input: "freqconv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "freqconv/weights/read"
  op: "Identity"
  input: "freqconv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "freqconv/weights_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "freqconv/weights_1"
      }
    }
  }
}
node {
  name: "freqconv/weights_1"
  op: "HistogramSummary"
  input: "freqconv/weights_1/tag"
  input: "freqconv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "freqconv/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "freqconv/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "ExpandDims"
  input: "freqconv/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "freqconv/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "freqconv/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "freqconv/weights/read"
  input: "freqconv/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "freqconv/conv1d/Conv2D"
  op: "Conv2D"
  input: "freqconv/conv1d/ExpandDims"
  input: "freqconv/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 64
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "freqconv/conv1d/Squeeze"
  op: "Squeeze"
  input: "freqconv/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "freqconv/relu"
  op: "Relu"
  input: "freqconv/conv1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "freqconv/relu/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "freqconv/relu/activations"
      }
    }
  }
}
node {
  name: "freqconv/relu/activations"
  op: "HistogramSummary"
  input: "freqconv/relu/activations/tag"
  input: "freqconv/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "freqconv/zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "freqconv/zero_fraction/Equal"
  op: "Equal"
  input: "freqconv/relu"
  input: "freqconv/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "freqconv/zero_fraction/Cast"
  op: "Cast"
  input: "freqconv/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "freqconv/zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "freqconv/zero_fraction/Mean"
  op: "Mean"
  input: "freqconv/zero_fraction/Cast"
  input: "freqconv/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "freqconv/relu/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "freqconv/relu/sparsity"
      }
    }
  }
}
node {
  name: "freqconv/relu/sparsity"
  op: "ScalarSummary"
  input: "freqconv/relu/sparsity/tags"
  input: "freqconv/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\002\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "freqconv/relu"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "Reshape"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10050378
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10050378
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/weights/Initializer/random_uniform/max"
  input: "conv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv1/weights/Initializer/random_uniform/mul"
  input: "conv1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 2
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Assign"
  op: "Assign"
  input: "conv1/weights"
  input: "conv1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/read"
  op: "Identity"
  input: "conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/conv/weights/histogram/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/conv/weights/histogram"
      }
    }
  }
}
node {
  name: "conv1/conv/weights/histogram"
  op: "HistogramSummary"
  input: "conv1/conv/weights/histogram/tag"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/mul"
  op: "Mul"
  input: "conv1/conv/BinWeights/mul/x"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/add"
  op: "Add"
  input: "conv1/conv/BinWeights/mul"
  input: "conv1/conv/BinWeights/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv1/conv/BinWeights/add"
  input: "conv1/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/clip_by_value"
  op: "Maximum"
  input: "conv1/conv/BinWeights/clip_by_value/Minimum"
  input: "conv1/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Rint"
  op: "Rint"
  input: "conv1/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/sub"
  op: "Sub"
  input: "conv1/conv/BinWeights/Rint"
  input: "conv1/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/StopGradient"
  op: "StopGradient"
  input: "conv1/conv/BinWeights/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/add_1"
  op: "Add"
  input: "conv1/conv/BinWeights/clip_by_value"
  input: "conv1/conv/BinWeights/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/mul_1"
  op: "Mul"
  input: "conv1/conv/BinWeights/mul_1/x"
  input: "conv1/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/sub_1"
  op: "Sub"
  input: "conv1/conv/BinWeights/mul_1"
  input: "conv1/conv/BinWeights/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Abs"
  op: "Abs"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Sum"
  op: "Sum"
  input: "conv1/conv/BinWeights/Abs"
  input: "conv1/conv/BinWeights/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/conv/BinWeights/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 18.0
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/truediv"
  op: "RealDiv"
  input: "conv1/conv/BinWeights/Sum"
  input: "conv1/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Tile"
  op: "Tile"
  input: "conv1/conv/BinWeights/truediv"
  input: "conv1/conv/BinWeights/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Reshape"
  op: "Reshape"
  input: "conv1/conv/BinWeights/Tile"
  input: "conv1/conv/BinWeights/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/conv/BinWeights/Mul_2"
  op: "Mul"
  input: "conv1/conv/BinWeights/sub_1"
  input: "conv1/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/BinWeights/BinWeights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/conv/BinWeights/BinWeights"
      }
    }
  }
}
node {
  name: "conv1/conv/BinWeights/BinWeights"
  op: "HistogramSummary"
  input: "conv1/conv/BinWeights/BinWeights/tag"
  input: "conv1/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/conv/Conv2D"
  op: "Conv2D"
  input: "transpose"
  input: "conv1/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/conv/Convout/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/conv/Convout"
      }
    }
  }
}
node {
  name: "conv1/conv/Convout"
  op: "HistogramSummary"
  input: "conv1/conv/Convout/tag"
  input: "conv1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/alpha"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Assign"
  op: "Assign"
  input: "conv1/batchnorm/alpha"
  input: "conv1/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/read"
  op: "Identity"
  input: "conv1/batchnorm/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv1/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Assign"
  op: "Assign"
  input: "conv1/batchnorm/beta"
  input: "conv1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/beta/read"
  op: "Identity"
  input: "conv1/batchnorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv1/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/mean/Assign"
  op: "Assign"
  input: "conv1/batchnorm/mean"
  input: "conv1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/mean/read"
  op: "Identity"
  input: "conv1/batchnorm/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/mean"
      }
    }
  }
}
node {
  name: "conv1/ones_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/var"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/var/Assign"
  op: "Assign"
  input: "conv1/batchnorm/var"
  input: "conv1/ones_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/var/read"
  op: "Identity"
  input: "conv1/batchnorm/var"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/var"
      }
    }
  }
}
node {
  name: "conv1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/moments/mean"
  op: "Mean"
  input: "conv1/conv/Conv2D"
  input: "conv1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/moments/StopGradient"
  op: "StopGradient"
  input: "conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv1/conv/Conv2D"
  input: "conv1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/moments/variance"
  op: "Mean"
  input: "conv1/moments/SquaredDifference"
  input: "conv1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/moments/Squeeze"
  op: "Squeeze"
  input: "conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv1/moments/Squeeze_1"
  op: "Squeeze"
  input: "conv1/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv1/mul"
  op: "Mul"
  input: "conv1/batchnorm/mean/read"
  input: "conv1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv1/mul_1"
  op: "Mul"
  input: "conv1/moments/Squeeze"
  input: "conv1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/add"
  op: "Add"
  input: "conv1/mul"
  input: "conv1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Assign"
  op: "Assign"
  input: "conv1/batchnorm/mean"
  input: "conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv1/mul_2"
  op: "Mul"
  input: "conv1/batchnorm/var/read"
  input: "conv1/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv1/mul_3"
  op: "Mul"
  input: "conv1/moments/Squeeze_1"
  input: "conv1/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/add_1"
  op: "Add"
  input: "conv1/mul_2"
  input: "conv1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Assign_1"
  op: "Assign"
  input: "conv1/batchnorm/var"
  input: "conv1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/add/y"
  op: "Const"
  input: "^conv1/Assign"
  input: "^conv1/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.9999997e-05
      }
    }
  }
}
node {
  name: "conv1/batchnorm/add"
  op: "Add"
  input: "conv1/moments/Squeeze_1"
  input: "conv1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/mul"
  op: "Mul"
  input: "conv1/batchnorm/Rsqrt"
  input: "conv1/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/mul_1"
  op: "Mul"
  input: "conv1/conv/Conv2D"
  input: "conv1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/mul_2"
  op: "Mul"
  input: "conv1/moments/Squeeze"
  input: "conv1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/sub"
  op: "Sub"
  input: "conv1/batchnorm/beta/read"
  input: "conv1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/batchnorm/add_1"
  op: "Add"
  input: "conv1/batchnorm/mul_1"
  input: "conv1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Relu"
  op: "Relu"
  input: "conv1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv1/Relu"
  input: "conv1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/clip_by_value"
  op: "Maximum"
  input: "conv1/clip_by_value/Minimum"
  input: "conv1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/Rint"
  op: "Rint"
  input: "conv1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/sub"
  op: "Sub"
  input: "conv1/Rint"
  input: "conv1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/StopGradient"
  op: "StopGradient"
  input: "conv1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/add_2"
  op: "Add"
  input: "conv1/clip_by_value"
  input: "conv1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/add_2/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/add_2/activations"
      }
    }
  }
}
node {
  name: "conv1/add_2/activations"
  op: "HistogramSummary"
  input: "conv1/add_2/activations/tag"
  input: "conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/zero_fraction/Equal"
  op: "Equal"
  input: "conv1/add_2"
  input: "conv1/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/zero_fraction/Cast"
  op: "Cast"
  input: "conv1/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/zero_fraction/Mean"
  op: "Mean"
  input: "conv1/zero_fraction/Cast"
  input: "conv1/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/add_2/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv1/add_2/sparsity"
      }
    }
  }
}
node {
  name: "conv1/add_2/sparsity"
  op: "ScalarSummary"
  input: "conv1/add_2/sparsity/tags"
  input: "conv1/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pool1"
  op: "MaxPool"
  input: "conv1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/weights/Initializer/random_uniform/max"
  input: "conv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv2/weights/Initializer/random_uniform/mul"
  input: "conv2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Assign"
  op: "Assign"
  input: "conv2/weights"
  input: "conv2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/read"
  op: "Identity"
  input: "conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/conv/weights/histogram/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/conv/weights/histogram"
      }
    }
  }
}
node {
  name: "conv2/conv/weights/histogram"
  op: "HistogramSummary"
  input: "conv2/conv/weights/histogram/tag"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/mul"
  op: "Mul"
  input: "conv2/conv/BinWeights/mul/x"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/add"
  op: "Add"
  input: "conv2/conv/BinWeights/mul"
  input: "conv2/conv/BinWeights/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv2/conv/BinWeights/add"
  input: "conv2/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/clip_by_value"
  op: "Maximum"
  input: "conv2/conv/BinWeights/clip_by_value/Minimum"
  input: "conv2/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Rint"
  op: "Rint"
  input: "conv2/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/sub"
  op: "Sub"
  input: "conv2/conv/BinWeights/Rint"
  input: "conv2/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/StopGradient"
  op: "StopGradient"
  input: "conv2/conv/BinWeights/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/add_1"
  op: "Add"
  input: "conv2/conv/BinWeights/clip_by_value"
  input: "conv2/conv/BinWeights/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/mul_1"
  op: "Mul"
  input: "conv2/conv/BinWeights/mul_1/x"
  input: "conv2/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/sub_1"
  op: "Sub"
  input: "conv2/conv/BinWeights/mul_1"
  input: "conv2/conv/BinWeights/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Abs"
  op: "Abs"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Sum"
  op: "Sum"
  input: "conv2/conv/BinWeights/Abs"
  input: "conv2/conv/BinWeights/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/conv/BinWeights/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 576.0
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/truediv"
  op: "RealDiv"
  input: "conv2/conv/BinWeights/Sum"
  input: "conv2/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Tile"
  op: "Tile"
  input: "conv2/conv/BinWeights/truediv"
  input: "conv2/conv/BinWeights/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Reshape"
  op: "Reshape"
  input: "conv2/conv/BinWeights/Tile"
  input: "conv2/conv/BinWeights/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/conv/BinWeights/Mul_2"
  op: "Mul"
  input: "conv2/conv/BinWeights/sub_1"
  input: "conv2/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/BinWeights/BinWeights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/conv/BinWeights/BinWeights"
      }
    }
  }
}
node {
  name: "conv2/conv/BinWeights/BinWeights"
  op: "HistogramSummary"
  input: "conv2/conv/BinWeights/BinWeights/tag"
  input: "conv2/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/conv/Conv2D"
  op: "Conv2D"
  input: "pool1"
  input: "conv2/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/conv/Convout/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/conv/Convout"
      }
    }
  }
}
node {
  name: "conv2/conv/Convout"
  op: "HistogramSummary"
  input: "conv2/conv/Convout/tag"
  input: "conv2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/alpha"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Assign"
  op: "Assign"
  input: "conv2/batchnorm/alpha"
  input: "conv2/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/read"
  op: "Identity"
  input: "conv2/batchnorm/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv2/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Assign"
  op: "Assign"
  input: "conv2/batchnorm/beta"
  input: "conv2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/beta/read"
  op: "Identity"
  input: "conv2/batchnorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv2/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/mean/Assign"
  op: "Assign"
  input: "conv2/batchnorm/mean"
  input: "conv2/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/mean/read"
  op: "Identity"
  input: "conv2/batchnorm/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/mean"
      }
    }
  }
}
node {
  name: "conv2/ones_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/var"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/var/Assign"
  op: "Assign"
  input: "conv2/batchnorm/var"
  input: "conv2/ones_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/var/read"
  op: "Identity"
  input: "conv2/batchnorm/var"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/var"
      }
    }
  }
}
node {
  name: "conv2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/moments/mean"
  op: "Mean"
  input: "conv2/conv/Conv2D"
  input: "conv2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/moments/StopGradient"
  op: "StopGradient"
  input: "conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv2/conv/Conv2D"
  input: "conv2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/moments/variance"
  op: "Mean"
  input: "conv2/moments/SquaredDifference"
  input: "conv2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/moments/Squeeze"
  op: "Squeeze"
  input: "conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv2/moments/Squeeze_1"
  op: "Squeeze"
  input: "conv2/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv2/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv2/mul"
  op: "Mul"
  input: "conv2/batchnorm/mean/read"
  input: "conv2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv2/mul_1"
  op: "Mul"
  input: "conv2/moments/Squeeze"
  input: "conv2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/add"
  op: "Add"
  input: "conv2/mul"
  input: "conv2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Assign"
  op: "Assign"
  input: "conv2/batchnorm/mean"
  input: "conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv2/mul_2"
  op: "Mul"
  input: "conv2/batchnorm/var/read"
  input: "conv2/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv2/mul_3"
  op: "Mul"
  input: "conv2/moments/Squeeze_1"
  input: "conv2/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/add_1"
  op: "Add"
  input: "conv2/mul_2"
  input: "conv2/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Assign_1"
  op: "Assign"
  input: "conv2/batchnorm/var"
  input: "conv2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/add/y"
  op: "Const"
  input: "^conv2/Assign"
  input: "^conv2/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.9999997e-05
      }
    }
  }
}
node {
  name: "conv2/batchnorm/add"
  op: "Add"
  input: "conv2/moments/Squeeze_1"
  input: "conv2/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv2/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/mul"
  op: "Mul"
  input: "conv2/batchnorm/Rsqrt"
  input: "conv2/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/mul_1"
  op: "Mul"
  input: "conv2/conv/Conv2D"
  input: "conv2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/mul_2"
  op: "Mul"
  input: "conv2/moments/Squeeze"
  input: "conv2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/sub"
  op: "Sub"
  input: "conv2/batchnorm/beta/read"
  input: "conv2/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/batchnorm/add_1"
  op: "Add"
  input: "conv2/batchnorm/mul_1"
  input: "conv2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Relu"
  op: "Relu"
  input: "conv2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv2/Relu"
  input: "conv2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/clip_by_value"
  op: "Maximum"
  input: "conv2/clip_by_value/Minimum"
  input: "conv2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/Rint"
  op: "Rint"
  input: "conv2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/sub"
  op: "Sub"
  input: "conv2/Rint"
  input: "conv2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/StopGradient"
  op: "StopGradient"
  input: "conv2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/add_2"
  op: "Add"
  input: "conv2/clip_by_value"
  input: "conv2/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/add_2/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/add_2/activations"
      }
    }
  }
}
node {
  name: "conv2/add_2/activations"
  op: "HistogramSummary"
  input: "conv2/add_2/activations/tag"
  input: "conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/zero_fraction/Equal"
  op: "Equal"
  input: "conv2/add_2"
  input: "conv2/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/zero_fraction/Cast"
  op: "Cast"
  input: "conv2/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/zero_fraction/Mean"
  op: "Mean"
  input: "conv2/zero_fraction/Cast"
  input: "conv2/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/add_2/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv2/add_2/sparsity"
      }
    }
  }
}
node {
  name: "conv2/add_2/sparsity"
  op: "ScalarSummary"
  input: "conv2/add_2/sparsity/tags"
  input: "conv2/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pool2"
  op: "MaxPool"
  input: "conv2/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.072168782
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.072168782
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv3/weights/Initializer/random_uniform/max"
  input: "conv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv3/weights/Initializer/random_uniform/RandomUniform"
  input: "conv3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv3/weights/Initializer/random_uniform/mul"
  input: "conv3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Assign"
  op: "Assign"
  input: "conv3/weights"
  input: "conv3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/read"
  op: "Identity"
  input: "conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/conv/weights/histogram/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/conv/weights/histogram"
      }
    }
  }
}
node {
  name: "conv3/conv/weights/histogram"
  op: "HistogramSummary"
  input: "conv3/conv/weights/histogram/tag"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/mul"
  op: "Mul"
  input: "conv3/conv/BinWeights/mul/x"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/add"
  op: "Add"
  input: "conv3/conv/BinWeights/mul"
  input: "conv3/conv/BinWeights/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv3/conv/BinWeights/add"
  input: "conv3/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/clip_by_value"
  op: "Maximum"
  input: "conv3/conv/BinWeights/clip_by_value/Minimum"
  input: "conv3/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Rint"
  op: "Rint"
  input: "conv3/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/sub"
  op: "Sub"
  input: "conv3/conv/BinWeights/Rint"
  input: "conv3/conv/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/StopGradient"
  op: "StopGradient"
  input: "conv3/conv/BinWeights/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/add_1"
  op: "Add"
  input: "conv3/conv/BinWeights/clip_by_value"
  input: "conv3/conv/BinWeights/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/mul_1"
  op: "Mul"
  input: "conv3/conv/BinWeights/mul_1/x"
  input: "conv3/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/sub_1"
  op: "Sub"
  input: "conv3/conv/BinWeights/mul_1"
  input: "conv3/conv/BinWeights/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Abs"
  op: "Abs"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Sum"
  op: "Sum"
  input: "conv3/conv/BinWeights/Abs"
  input: "conv3/conv/BinWeights/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/conv/BinWeights/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 576.0
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/truediv"
  op: "RealDiv"
  input: "conv3/conv/BinWeights/Sum"
  input: "conv3/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Tile"
  op: "Tile"
  input: "conv3/conv/BinWeights/truediv"
  input: "conv3/conv/BinWeights/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Reshape"
  op: "Reshape"
  input: "conv3/conv/BinWeights/Tile"
  input: "conv3/conv/BinWeights/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/conv/BinWeights/Mul_2"
  op: "Mul"
  input: "conv3/conv/BinWeights/sub_1"
  input: "conv3/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/BinWeights/BinWeights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/conv/BinWeights/BinWeights"
      }
    }
  }
}
node {
  name: "conv3/conv/BinWeights/BinWeights"
  op: "HistogramSummary"
  input: "conv3/conv/BinWeights/BinWeights/tag"
  input: "conv3/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/conv/Conv2D"
  op: "Conv2D"
  input: "pool2"
  input: "conv3/conv/BinWeights/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/conv/Convout/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/conv/Convout"
      }
    }
  }
}
node {
  name: "conv3/conv/Convout"
  op: "HistogramSummary"
  input: "conv3/conv/Convout/tag"
  input: "conv3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/alpha"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Assign"
  op: "Assign"
  input: "conv3/batchnorm/alpha"
  input: "conv3/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/read"
  op: "Identity"
  input: "conv3/batchnorm/alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv3/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Assign"
  op: "Assign"
  input: "conv3/batchnorm/beta"
  input: "conv3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/beta/read"
  op: "Identity"
  input: "conv3/batchnorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv3/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/mean/Assign"
  op: "Assign"
  input: "conv3/batchnorm/mean"
  input: "conv3/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/mean/read"
  op: "Identity"
  input: "conv3/batchnorm/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/mean"
      }
    }
  }
}
node {
  name: "conv3/ones_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/var"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/var/Assign"
  op: "Assign"
  input: "conv3/batchnorm/var"
  input: "conv3/ones_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/var/read"
  op: "Identity"
  input: "conv3/batchnorm/var"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/var"
      }
    }
  }
}
node {
  name: "conv3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/moments/mean"
  op: "Mean"
  input: "conv3/conv/Conv2D"
  input: "conv3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/moments/StopGradient"
  op: "StopGradient"
  input: "conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "conv3/conv/Conv2D"
  input: "conv3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/moments/variance"
  op: "Mean"
  input: "conv3/moments/SquaredDifference"
  input: "conv3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/moments/Squeeze"
  op: "Squeeze"
  input: "conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv3/moments/Squeeze_1"
  op: "Squeeze"
  input: "conv3/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "conv3/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv3/mul"
  op: "Mul"
  input: "conv3/batchnorm/mean/read"
  input: "conv3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv3/mul_1"
  op: "Mul"
  input: "conv3/moments/Squeeze"
  input: "conv3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/add"
  op: "Add"
  input: "conv3/mul"
  input: "conv3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Assign"
  op: "Assign"
  input: "conv3/batchnorm/mean"
  input: "conv3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "conv3/mul_2"
  op: "Mul"
  input: "conv3/batchnorm/var/read"
  input: "conv3/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "conv3/mul_3"
  op: "Mul"
  input: "conv3/moments/Squeeze_1"
  input: "conv3/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/add_1"
  op: "Add"
  input: "conv3/mul_2"
  input: "conv3/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Assign_1"
  op: "Assign"
  input: "conv3/batchnorm/var"
  input: "conv3/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/add/y"
  op: "Const"
  input: "^conv3/Assign"
  input: "^conv3/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.9999997e-05
      }
    }
  }
}
node {
  name: "conv3/batchnorm/add"
  op: "Add"
  input: "conv3/moments/Squeeze_1"
  input: "conv3/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "conv3/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/mul"
  op: "Mul"
  input: "conv3/batchnorm/Rsqrt"
  input: "conv3/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/mul_1"
  op: "Mul"
  input: "conv3/conv/Conv2D"
  input: "conv3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/mul_2"
  op: "Mul"
  input: "conv3/moments/Squeeze"
  input: "conv3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/sub"
  op: "Sub"
  input: "conv3/batchnorm/beta/read"
  input: "conv3/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/batchnorm/add_1"
  op: "Add"
  input: "conv3/batchnorm/mul_1"
  input: "conv3/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Relu"
  op: "Relu"
  input: "conv3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/clip_by_value/Minimum"
  op: "Minimum"
  input: "conv3/Relu"
  input: "conv3/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/clip_by_value"
  op: "Maximum"
  input: "conv3/clip_by_value/Minimum"
  input: "conv3/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/Rint"
  op: "Rint"
  input: "conv3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/sub"
  op: "Sub"
  input: "conv3/Rint"
  input: "conv3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/StopGradient"
  op: "StopGradient"
  input: "conv3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/add_2"
  op: "Add"
  input: "conv3/clip_by_value"
  input: "conv3/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/add_2/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/add_2/activations"
      }
    }
  }
}
node {
  name: "conv3/add_2/activations"
  op: "HistogramSummary"
  input: "conv3/add_2/activations/tag"
  input: "conv3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/zero_fraction/Equal"
  op: "Equal"
  input: "conv3/add_2"
  input: "conv3/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/zero_fraction/Cast"
  op: "Cast"
  input: "conv3/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/zero_fraction/Mean"
  op: "Mean"
  input: "conv3/zero_fraction/Cast"
  input: "conv3/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/add_2/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conv3/add_2/sparsity"
      }
    }
  }
}
node {
  name: "conv3/add_2/sparsity"
  op: "ScalarSummary"
  input: "conv3/add_2/sparsity/tags"
  input: "conv3/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\020\000\000"
      }
    }
  }
}
node {
  name: "fc4/Reshape"
  op: "Reshape"
  input: "conv3/add_2"
  input: "fc4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.038259268
      }
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.038259268
      }
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fc4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fc4/weights/Initializer/random_uniform/max"
  input: "fc4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fc4/weights/Initializer/random_uniform/RandomUniform"
  input: "fc4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/weights/Initializer/random_uniform"
  op: "Add"
  input: "fc4/weights/Initializer/random_uniform/mul"
  input: "fc4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/weights/Assign"
  op: "Assign"
  input: "fc4/weights"
  input: "fc4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/weights/read"
  op: "Identity"
  input: "fc4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.1
      }
    }
  }
}
node {
  name: "fc4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/biases/Assign"
  op: "Assign"
  input: "fc4/biases"
  input: "fc4/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/biases/read"
  op: "Identity"
  input: "fc4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
}
node {
  name: "fc4/fc4/weights/histogram/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fc4/fc4/weights/histogram"
      }
    }
  }
}
node {
  name: "fc4/fc4/weights/histogram"
  op: "HistogramSummary"
  input: "fc4/fc4/weights/histogram/tag"
  input: "fc4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/mul"
  op: "Mul"
  input: "fc4/fc4/BinWeights/mul/x"
  input: "fc4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/add"
  op: "Add"
  input: "fc4/fc4/BinWeights/mul"
  input: "fc4/fc4/BinWeights/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/clip_by_value/Minimum"
  op: "Minimum"
  input: "fc4/fc4/BinWeights/add"
  input: "fc4/fc4/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/clip_by_value"
  op: "Maximum"
  input: "fc4/fc4/BinWeights/clip_by_value/Minimum"
  input: "fc4/fc4/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/Rint"
  op: "Rint"
  input: "fc4/fc4/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/sub"
  op: "Sub"
  input: "fc4/fc4/BinWeights/Rint"
  input: "fc4/fc4/BinWeights/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/StopGradient"
  op: "StopGradient"
  input: "fc4/fc4/BinWeights/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/add_1"
  op: "Add"
  input: "fc4/fc4/BinWeights/clip_by_value"
  input: "fc4/fc4/BinWeights/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/mul_1"
  op: "Mul"
  input: "fc4/fc4/BinWeights/mul_1/x"
  input: "fc4/fc4/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/sub_1"
  op: "Sub"
  input: "fc4/fc4/BinWeights/mul_1"
  input: "fc4/fc4/BinWeights/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/BinWeights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fc4/fc4/BinWeights/BinWeights"
      }
    }
  }
}
node {
  name: "fc4/fc4/BinWeights/BinWeights"
  op: "HistogramSummary"
  input: "fc4/fc4/BinWeights/BinWeights/tag"
  input: "fc4/fc4/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/fc4/MatMul"
  op: "MatMul"
  input: "fc4/Reshape"
  input: "fc4/fc4/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fc4/fc4/Fcout/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fc4/fc4/Fcout"
      }
    }
  }
}
node {
  name: "fc4/fc4/Fcout"
  op: "HistogramSummary"
  input: "fc4/fc4/Fcout/tag"
  input: "fc4/fc4/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/BiasAdd"
  op: "BiasAdd"
  input: "fc4/fc4/MatMul"
  input: "fc4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fc4/BiasAdd/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fc4/BiasAdd/activations"
      }
    }
  }
}
node {
  name: "fc4/BiasAdd/activations"
  op: "HistogramSummary"
  input: "fc4/BiasAdd/activations/tag"
  input: "fc4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/zero_fraction/zero"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/zero_fraction/Equal"
  op: "Equal"
  input: "fc4/BiasAdd"
  input: "fc4/zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fc4/zero_fraction/Cast"
  op: "Cast"
  input: "fc4/zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "fc4/zero_fraction/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fc4/zero_fraction/Mean"
  op: "Mean"
  input: "fc4/zero_fraction/Cast"
  input: "fc4/zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fc4/BiasAdd/sparsity/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fc4/BiasAdd/sparsity"
      }
    }
  }
}
node {
  name: "fc4/BiasAdd/sparsity"
  op: "ScalarSummary"
  input: "fc4/BiasAdd/sparsity/tags"
  input: "fc4/zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "fc4/BiasAdd"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "train/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/fc4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^train/gradients/fc4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/fc4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "^train/gradients/fc4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/fc4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/fc4/BiasAdd_grad/tuple/control_dependency"
  input: "fc4/fc4/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fc4/Reshape"
  input: "train/gradients/fc4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/MatMul_grad/MatMul"
  input: "^train/gradients/fc4/fc4/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/fc4/fc4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/MatMul_grad/MatMul"
  input: "^train/gradients/fc4/fc4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/MatMul_grad/MatMul_1"
  input: "^train/gradients/fc4/fc4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/Reshape_grad/Shape"
  op: "Shape"
  input: "conv3/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/fc4/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Neg"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Shape"
  op: "Shape"
  input: "conv3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Shape_1"
  op: "Shape"
  input: "conv3/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/add_2_grad/Shape"
  input: "train/gradients/conv3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/Reshape_grad/Reshape"
  input: "train/gradients/conv3/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/add_2_grad/Sum"
  input: "train/gradients/conv3/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/Reshape_grad/Reshape"
  input: "train/gradients/conv3/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/add_2_grad/Sum_1"
  input: "train/gradients/conv3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/add_2_grad/Reshape"
  input: "^train/gradients/conv3/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/add_2_grad/Reshape"
  input: "^train/gradients/conv3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/add_2_grad/Reshape_1"
  input: "^train/gradients/conv3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/control_dependency"
  input: "fc4/fc4/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Mul"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Mul_1"
  op: "Mul"
  input: "fc4/fc4/BinWeights/mul_1/x"
  input: "train/gradients/fc4/fc4/BinWeights/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Mul_1"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Sum_1"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Shape"
  op: "Shape"
  input: "conv3/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv3/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv3/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv3/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv3/clip_by_value/Minimum"
  input: "conv3/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/clip_by_value_grad/Shape"
  input: "train/gradients/conv3/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv3/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv3/add_2_grad/tuple/control_dependency"
  input: "train/gradients/conv3/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv3/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv3/clip_by_value_grad/zeros"
  input: "train/gradients/conv3/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/clip_by_value_grad/Select"
  input: "train/gradients/conv3/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/clip_by_value_grad/Sum"
  input: "train/gradients/conv3/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/clip_by_value_grad/Select_1"
  input: "train/gradients/conv3/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv3/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv3/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv3/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv3/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv3/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv3/Relu"
  input: "conv3/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv3/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv3/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv3/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv3/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv3/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape_2"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "fc4/fc4/BinWeights/clip_by_value/Minimum"
  input: "fc4/fc4/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/control_dependency"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/zeros"
  input: "train/gradients/fc4/fc4/BinWeights/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Select_1"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Sum_1"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv3/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "fc4/fc4/BinWeights/add"
  input: "fc4/fc4/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "conv3/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Shape"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/Relu_grad/ReluGrad"
  input: "train/gradients/conv3/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Sum"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/Relu_grad/ReluGrad"
  input: "train/gradients/conv3/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Sum_1"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/add_1_grad/Reshape_1"
  input: "^train/gradients/conv3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Sum_1"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/add_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/add_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "conv3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Shape"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "conv3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Mul"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Sum"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv3/conv/Conv2D"
  input: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Mul_1"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Sum_1"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv3/batchnorm/sub_grad/Neg"
}
node {
  name: "train/gradients/conv3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/sub_grad/Neg"
  input: "^train/gradients/conv3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/tuple/control_dependency"
  input: "fc4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Mul"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Mul_1"
  op: "Mul"
  input: "fc4/fc4/BinWeights/mul/x"
  input: "train/gradients/fc4/fc4/BinWeights/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Mul_1"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Sum_1"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape_1"
  input: "^train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/fc4/fc4/BinWeights/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv3/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv3/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv3/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv3/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_2_grad/Mul_1"
  input: "^train/gradients/conv3/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv3/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/conv3/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN"
  input: "conv3/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/AddN"
  input: "conv3/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv3/batchnorm/mul_grad/Mul_1"
}
node {
  name: "train/gradients/conv3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/mul_grad/Mul_1"
  input: "^train/gradients/conv3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "conv3/batchnorm/Rsqrt"
  input: "train/gradients/conv3/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/batchnorm/add_grad/Shape"
  input: "train/gradients/conv3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv3/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/add_grad/Sum"
  input: "train/gradients/conv3/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv3/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/add_grad/Sum_1"
  input: "train/gradients/conv3/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/batchnorm/add_grad/Reshape_1"
  input: "^train/gradients/conv3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/batchnorm/add_grad/tuple/control_dependency"
  input: "train/gradients/conv3/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Shape"
  op: "Shape"
  input: "conv3/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/add"
  op: "Add"
  input: "conv3/moments/variance/reduction_indices"
  input: "train/gradients/conv3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv3/moments/variance_grad/add"
  input: "train/gradients/conv3/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/range"
  op: "Range"
  input: "train/gradients/conv3/moments/variance_grad/range/start"
  input: "train/gradients/conv3/moments/variance_grad/Size"
  input: "train/gradients/conv3/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv3/moments/variance_grad/Shape_1"
  input: "train/gradients/conv3/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv3/moments/variance_grad/range"
  input: "train/gradients/conv3/moments/variance_grad/mod"
  input: "train/gradients/conv3/moments/variance_grad/Shape"
  input: "train/gradients/conv3/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv3/moments/variance_grad/DynamicStitch"
  input: "train/gradients/conv3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv3/moments/variance_grad/Shape"
  input: "train/gradients/conv3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/moments/Squeeze_1_grad/Reshape"
  input: "train/gradients/conv3/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv3/moments/variance_grad/Reshape"
  input: "train/gradients/conv3/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "conv3/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv3/moments/variance_grad/Shape_2"
  input: "train/gradients/conv3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv3/moments/variance_grad/Shape_3"
  input: "train/gradients/conv3/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv3/moments/variance_grad/Prod_1"
  input: "train/gradients/conv3/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv3/moments/variance_grad/Prod"
  input: "train/gradients/conv3/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv3/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv3/moments/variance_grad/Tile"
  input: "train/gradients/conv3/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "conv3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Shape"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train/gradients/conv3/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/scalar"
  input: "train/gradients/conv3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "conv3/conv/Conv2D"
  input: "conv3/moments/StopGradient"
  input: "^train/gradients/conv3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/mul"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Sum"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Sum_1"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv3/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Reshape"
  input: "^train/gradients/conv3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Shape"
  op: "Shape"
  input: "conv3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/add"
  op: "Add"
  input: "conv3/moments/mean/reduction_indices"
  input: "train/gradients/conv3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv3/moments/mean_grad/add"
  input: "train/gradients/conv3/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/range"
  op: "Range"
  input: "train/gradients/conv3/moments/mean_grad/range/start"
  input: "train/gradients/conv3/moments/mean_grad/Size"
  input: "train/gradients/conv3/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv3/moments/mean_grad/Shape_1"
  input: "train/gradients/conv3/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv3/moments/mean_grad/range"
  input: "train/gradients/conv3/moments/mean_grad/mod"
  input: "train/gradients/conv3/moments/mean_grad/Shape"
  input: "train/gradients/conv3/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv3/moments/mean_grad/DynamicStitch"
  input: "train/gradients/conv3/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv3/moments/mean_grad/Shape"
  input: "train/gradients/conv3/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/moments/Squeeze_grad/Reshape"
  input: "train/gradients/conv3/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv3/moments/mean_grad/Reshape"
  input: "train/gradients/conv3/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "conv3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv3/moments/mean_grad/Shape_2"
  input: "train/gradients/conv3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv3/moments/mean_grad/Shape_3"
  input: "train/gradients/conv3/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv3/moments/mean_grad/Prod_1"
  input: "train/gradients/conv3/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv3/moments/mean_grad/Prod"
  input: "train/gradients/conv3/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv3/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv3/moments/mean_grad/Tile"
  input: "train/gradients/conv3/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/conv3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/conv3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "train/gradients/conv3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pool2"
  input: "conv3/conv/BinWeights/Mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv3/conv/Conv2D_grad/ShapeN"
  input: "conv3/conv/BinWeights/Mul_2"
  input: "train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pool2"
  input: "train/gradients/conv3/conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/pool2_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2/add_2"
  input: "pool2"
  input: "train/gradients/conv3/conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv3/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv3/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv3/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv3/conv/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul_1"
  input: "^train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Shape"
  op: "Shape"
  input: "conv2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Shape_1"
  op: "Shape"
  input: "conv2/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/add_2_grad/Shape"
  input: "train/gradients/conv2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/pool2_grad/MaxPoolGrad"
  input: "train/gradients/conv2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/add_2_grad/Sum"
  input: "train/gradients/conv2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/pool2_grad/MaxPoolGrad"
  input: "train/gradients/conv2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/add_2_grad/Sum_1"
  input: "train/gradients/conv2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/add_2_grad/Reshape"
  input: "^train/gradients/conv2/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/add_2_grad/Reshape"
  input: "^train/gradients/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/add_2_grad/Reshape_1"
  input: "^train/gradients/conv2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Neg"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36864
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/conv3/conv/BinWeights/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  input: "conv3/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Mul"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv3/conv/BinWeights/mul_1/x"
  input: "train/gradients/conv3/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Mul_1"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/stack"
  op: "Pack"
  input: "conv3/conv/BinWeights/Tile/multiples"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub"
  op: "Sub"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range"
  op: "Range"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range/start"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose"
  op: "Transpose"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/stack"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/transpose"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/range"
  op: "Range"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/range/start"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Size"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/Reshape_grad/Reshape"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Tile_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Reshape_1"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Sum"
  input: "conv3/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Neg"
  op: "Neg"
  input: "conv3/conv/BinWeights/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Neg"
  input: "conv3/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv_1"
  input: "conv3/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/conv3/conv/BinWeights/Tile_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/mul"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/add"
  op: "Add"
  input: "conv3/conv/BinWeights/Sum/reduction_indices"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/add"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/range"
  op: "Range"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/range/start"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Size"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Shape_1"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/range"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/mod"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/DynamicStitch"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/truediv_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Reshape"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Shape"
  op: "Shape"
  input: "conv2/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv2/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv2/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv2/clip_by_value/Minimum"
  input: "conv2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/clip_by_value_grad/Shape"
  input: "train/gradients/conv2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv2/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv2/add_2_grad/tuple/control_dependency"
  input: "train/gradients/conv2/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv2/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv2/clip_by_value_grad/zeros"
  input: "train/gradients/conv2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/clip_by_value_grad/Select"
  input: "train/gradients/conv2/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/clip_by_value_grad/Sum"
  input: "train/gradients/conv2/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/clip_by_value_grad/Select_1"
  input: "train/gradients/conv2/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv2/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv2/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv2/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv2/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Abs_grad/Sign"
  op: "Sign"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/Abs_grad/mul"
  op: "Mul"
  input: "train/gradients/conv3/conv/BinWeights/Sum_grad/Tile"
  input: "train/gradients/conv3/conv/BinWeights/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv2/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv2/Relu"
  input: "conv2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv2/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv2/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv2/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv2/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv2/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv2/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv3/conv/BinWeights/clip_by_value/Minimum"
  input: "conv3/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/zeros"
  input: "train/gradients/conv3/conv/BinWeights/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Select_1"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "conv2/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Shape"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/Relu_grad/ReluGrad"
  input: "train/gradients/conv2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Sum"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/Relu_grad/ReluGrad"
  input: "train/gradients/conv2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Sum_1"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/add_1_grad/Reshape_1"
  input: "^train/gradients/conv2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv3/conv/BinWeights/add"
  input: "conv3/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "conv2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Shape"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "conv2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Mul"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Sum"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv2/conv/Conv2D"
  input: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Mul_1"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Sum_1"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv2/batchnorm/sub_grad/Neg"
}
node {
  name: "train/gradients/conv2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/sub_grad/Neg"
  input: "^train/gradients/conv2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv2/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv2/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv2/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_2_grad/Mul_1"
  input: "^train/gradients/conv2/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/tuple/control_dependency"
  input: "conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Mul"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Mul_1"
  op: "Mul"
  input: "conv3/conv/BinWeights/mul/x"
  input: "train/gradients/conv3/conv/BinWeights/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Mul_1"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Sum_1"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv3/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv3/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv3/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/Reshape_1"
  input: "^train/gradients/conv3/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/conv2/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_2"
  input: "conv2/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/AddN_2"
  input: "conv2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv2/batchnorm/mul_grad/Mul_1"
}
node {
  name: "train/gradients/conv2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/mul_grad/Mul_1"
  input: "^train/gradients/conv2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/conv3/conv/BinWeights/Abs_grad/mul"
  input: "train/gradients/conv3/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv3/conv/BinWeights/Abs_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "conv2/batchnorm/Rsqrt"
  input: "train/gradients/conv2/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/batchnorm/add_grad/Shape"
  input: "train/gradients/conv2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv2/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/add_grad/Sum"
  input: "train/gradients/conv2/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv2/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/add_grad/Sum_1"
  input: "train/gradients/conv2/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/batchnorm/add_grad/Reshape_1"
  input: "^train/gradients/conv2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/batchnorm/add_grad/tuple/control_dependency"
  input: "train/gradients/conv2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Shape"
  op: "Shape"
  input: "conv2/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/add"
  op: "Add"
  input: "conv2/moments/variance/reduction_indices"
  input: "train/gradients/conv2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv2/moments/variance_grad/add"
  input: "train/gradients/conv2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/range"
  op: "Range"
  input: "train/gradients/conv2/moments/variance_grad/range/start"
  input: "train/gradients/conv2/moments/variance_grad/Size"
  input: "train/gradients/conv2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv2/moments/variance_grad/Shape_1"
  input: "train/gradients/conv2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv2/moments/variance_grad/range"
  input: "train/gradients/conv2/moments/variance_grad/mod"
  input: "train/gradients/conv2/moments/variance_grad/Shape"
  input: "train/gradients/conv2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv2/moments/variance_grad/DynamicStitch"
  input: "train/gradients/conv2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv2/moments/variance_grad/Shape"
  input: "train/gradients/conv2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/moments/Squeeze_1_grad/Reshape"
  input: "train/gradients/conv2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv2/moments/variance_grad/Reshape"
  input: "train/gradients/conv2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "conv2/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv2/moments/variance_grad/Shape_2"
  input: "train/gradients/conv2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv2/moments/variance_grad/Shape_3"
  input: "train/gradients/conv2/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv2/moments/variance_grad/Prod_1"
  input: "train/gradients/conv2/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv2/moments/variance_grad/Prod"
  input: "train/gradients/conv2/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv2/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv2/moments/variance_grad/Tile"
  input: "train/gradients/conv2/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "conv2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Shape"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train/gradients/conv2/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/scalar"
  input: "train/gradients/conv2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "conv2/conv/Conv2D"
  input: "conv2/moments/StopGradient"
  input: "^train/gradients/conv2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/mul"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Sum"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Sum_1"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv2/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Reshape"
  input: "^train/gradients/conv2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Shape"
  op: "Shape"
  input: "conv2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/add"
  op: "Add"
  input: "conv2/moments/mean/reduction_indices"
  input: "train/gradients/conv2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv2/moments/mean_grad/add"
  input: "train/gradients/conv2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/range"
  op: "Range"
  input: "train/gradients/conv2/moments/mean_grad/range/start"
  input: "train/gradients/conv2/moments/mean_grad/Size"
  input: "train/gradients/conv2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv2/moments/mean_grad/Shape_1"
  input: "train/gradients/conv2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv2/moments/mean_grad/range"
  input: "train/gradients/conv2/moments/mean_grad/mod"
  input: "train/gradients/conv2/moments/mean_grad/Shape"
  input: "train/gradients/conv2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv2/moments/mean_grad/DynamicStitch"
  input: "train/gradients/conv2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv2/moments/mean_grad/Shape"
  input: "train/gradients/conv2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/moments/Squeeze_grad/Reshape"
  input: "train/gradients/conv2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv2/moments/mean_grad/Reshape"
  input: "train/gradients/conv2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "conv2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv2/moments/mean_grad/Shape_2"
  input: "train/gradients/conv2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv2/moments/mean_grad/Shape_3"
  input: "train/gradients/conv2/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv2/moments/mean_grad/Prod_1"
  input: "train/gradients/conv2/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv2/moments/mean_grad/Prod"
  input: "train/gradients/conv2/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv2/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv2/moments/mean_grad/Tile"
  input: "train/gradients/conv2/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/conv2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/conv2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "train/gradients/conv2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "pool1"
  input: "conv2/conv/BinWeights/Mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv2/conv/Conv2D_grad/ShapeN"
  input: "conv2/conv/BinWeights/Mul_2"
  input: "train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "pool1"
  input: "train/gradients/conv2/conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/pool1_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv1/add_2"
  input: "pool1"
  input: "train/gradients/conv2/conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv2/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv2/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv2/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv2/conv/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul_1"
  input: "^train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Shape"
  op: "Shape"
  input: "conv1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Shape_1"
  op: "Shape"
  input: "conv1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/add_2_grad/Shape"
  input: "train/gradients/conv1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/pool1_grad/MaxPoolGrad"
  input: "train/gradients/conv1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/add_2_grad/Sum"
  input: "train/gradients/conv1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/pool1_grad/MaxPoolGrad"
  input: "train/gradients/conv1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/add_2_grad/Sum_1"
  input: "train/gradients/conv1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/add_2_grad/Reshape"
  input: "^train/gradients/conv1/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/add_2_grad/Reshape"
  input: "^train/gradients/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/add_2_grad/Reshape_1"
  input: "^train/gradients/conv1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Neg"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36864
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/conv2/conv/BinWeights/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  input: "conv2/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Mul"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv2/conv/BinWeights/mul_1/x"
  input: "train/gradients/conv2/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Mul_1"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/stack"
  op: "Pack"
  input: "conv2/conv/BinWeights/Tile/multiples"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub"
  op: "Sub"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range"
  op: "Range"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range/start"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose"
  op: "Transpose"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/stack"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/transpose"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/range"
  op: "Range"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/range/start"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Size"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/Reshape_grad/Reshape"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Tile_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Reshape_1"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Sum"
  input: "conv2/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Neg"
  op: "Neg"
  input: "conv2/conv/BinWeights/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Neg"
  input: "conv2/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv_1"
  input: "conv2/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/conv2/conv/BinWeights/Tile_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/mul"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/add"
  op: "Add"
  input: "conv2/conv/BinWeights/Sum/reduction_indices"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/add"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/range"
  op: "Range"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/range/start"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Size"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Shape_1"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/range"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/mod"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/DynamicStitch"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/truediv_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Reshape"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Shape"
  op: "Shape"
  input: "conv1/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv1/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv1/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv1/clip_by_value/Minimum"
  input: "conv1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/clip_by_value_grad/Shape"
  input: "train/gradients/conv1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv1/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv1/add_2_grad/tuple/control_dependency"
  input: "train/gradients/conv1/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv1/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv1/clip_by_value_grad/zeros"
  input: "train/gradients/conv1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/clip_by_value_grad/Select"
  input: "train/gradients/conv1/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/clip_by_value_grad/Sum"
  input: "train/gradients/conv1/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/clip_by_value_grad/Select_1"
  input: "train/gradients/conv1/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv1/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv1/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv1/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv1/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Abs_grad/Sign"
  op: "Sign"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/Abs_grad/mul"
  op: "Mul"
  input: "train/gradients/conv2/conv/BinWeights/Sum_grad/Tile"
  input: "train/gradients/conv2/conv/BinWeights/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "train/gradients/conv1/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv1/Relu"
  input: "conv1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv1/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv1/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv1/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv1/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv1/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/conv1/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv2/conv/BinWeights/clip_by_value/Minimum"
  input: "conv2/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/zeros"
  input: "train/gradients/conv2/conv/BinWeights/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Select_1"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "conv1/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Shape"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/Relu_grad/ReluGrad"
  input: "train/gradients/conv1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Sum"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/Relu_grad/ReluGrad"
  input: "train/gradients/conv1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Sum_1"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/add_1_grad/Reshape_1"
  input: "^train/gradients/conv1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv2/conv/BinWeights/add"
  input: "conv2/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "conv1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Shape"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "conv1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Mul"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Sum"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv1/conv/Conv2D"
  input: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Mul_1"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Sum_1"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv1/batchnorm/sub_grad/Neg"
}
node {
  name: "train/gradients/conv1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/sub_grad/Neg"
  input: "^train/gradients/conv1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "conv1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv1/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv1/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_2_grad/Mul"
  input: "^train/gradients/conv1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_2_grad/Mul_1"
  input: "^train/gradients/conv1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/tuple/control_dependency"
  input: "conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Mul"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Mul_1"
  op: "Mul"
  input: "conv2/conv/BinWeights/mul/x"
  input: "train/gradients/conv2/conv/BinWeights/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Mul_1"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Sum_1"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv2/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv2/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv2/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/Reshape_1"
  input: "^train/gradients/conv2/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/conv1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_5"
  input: "conv1/batchnorm/alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/AddN_5"
  input: "conv1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv1/batchnorm/mul_grad/Mul_1"
}
node {
  name: "train/gradients/conv1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_grad/Mul"
  input: "^train/gradients/conv1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/mul_grad/Mul_1"
  input: "^train/gradients/conv1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/conv2/conv/BinWeights/Abs_grad/mul"
  input: "train/gradients/conv2/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv2/conv/BinWeights/Abs_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "conv1/batchnorm/Rsqrt"
  input: "train/gradients/conv1/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/batchnorm/add_grad/Shape"
  input: "train/gradients/conv1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/add_grad/Sum"
  input: "train/gradients/conv1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/conv1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/add_grad/Sum_1"
  input: "train/gradients/conv1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/add_grad/Reshape"
  input: "^train/gradients/conv1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/batchnorm/add_grad/Reshape_1"
  input: "^train/gradients/conv1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/batchnorm/add_grad/tuple/control_dependency"
  input: "train/gradients/conv1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Shape"
  op: "Shape"
  input: "conv1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/add"
  op: "Add"
  input: "conv1/moments/variance/reduction_indices"
  input: "train/gradients/conv1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv1/moments/variance_grad/add"
  input: "train/gradients/conv1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/range"
  op: "Range"
  input: "train/gradients/conv1/moments/variance_grad/range/start"
  input: "train/gradients/conv1/moments/variance_grad/Size"
  input: "train/gradients/conv1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv1/moments/variance_grad/Shape_1"
  input: "train/gradients/conv1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv1/moments/variance_grad/range"
  input: "train/gradients/conv1/moments/variance_grad/mod"
  input: "train/gradients/conv1/moments/variance_grad/Shape"
  input: "train/gradients/conv1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv1/moments/variance_grad/DynamicStitch"
  input: "train/gradients/conv1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv1/moments/variance_grad/Shape"
  input: "train/gradients/conv1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/moments/Squeeze_1_grad/Reshape"
  input: "train/gradients/conv1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv1/moments/variance_grad/Reshape"
  input: "train/gradients/conv1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "conv1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv1/moments/variance_grad/Shape_2"
  input: "train/gradients/conv1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv1/moments/variance_grad/Shape_3"
  input: "train/gradients/conv1/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv1/moments/variance_grad/Prod_1"
  input: "train/gradients/conv1/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv1/moments/variance_grad/Prod"
  input: "train/gradients/conv1/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv1/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv1/moments/variance_grad/Tile"
  input: "train/gradients/conv1/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "conv1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Shape"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train/gradients/conv1/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/scalar"
  input: "train/gradients/conv1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "conv1/conv/Conv2D"
  input: "conv1/moments/StopGradient"
  input: "^train/gradients/conv1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/mul"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Sum"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Sum_1"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv1/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Reshape"
  input: "^train/gradients/conv1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/conv1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Shape"
  op: "Shape"
  input: "conv1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/add"
  op: "Add"
  input: "conv1/moments/mean/reduction_indices"
  input: "train/gradients/conv1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv1/moments/mean_grad/add"
  input: "train/gradients/conv1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/range"
  op: "Range"
  input: "train/gradients/conv1/moments/mean_grad/range/start"
  input: "train/gradients/conv1/moments/mean_grad/Size"
  input: "train/gradients/conv1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv1/moments/mean_grad/Shape_1"
  input: "train/gradients/conv1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv1/moments/mean_grad/range"
  input: "train/gradients/conv1/moments/mean_grad/mod"
  input: "train/gradients/conv1/moments/mean_grad/Shape"
  input: "train/gradients/conv1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv1/moments/mean_grad/DynamicStitch"
  input: "train/gradients/conv1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv1/moments/mean_grad/Shape"
  input: "train/gradients/conv1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/moments/Squeeze_grad/Reshape"
  input: "train/gradients/conv1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv1/moments/mean_grad/Reshape"
  input: "train/gradients/conv1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "conv1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/conv1/moments/mean_grad/Shape_2"
  input: "train/gradients/conv1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/conv1/moments/mean_grad/Shape_3"
  input: "train/gradients/conv1/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/conv1/moments/mean_grad/Prod_1"
  input: "train/gradients/conv1/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/conv1/moments/mean_grad/Prod"
  input: "train/gradients/conv1/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/conv1/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/conv1/moments/mean_grad/Tile"
  input: "train/gradients/conv1/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/conv1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/conv1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "train/gradients/conv1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "transpose"
  input: "conv1/conv/BinWeights/Mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/conv1/conv/Conv2D_grad/ShapeN"
  input: "conv1/conv/BinWeights/Mul_2"
  input: "train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "transpose"
  input: "train/gradients/conv1/conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/conv1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/conv1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/conv1/conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv1/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv1/conv/BinWeights/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/conv1/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "conv1/conv/BinWeights/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul"
  input: "^train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul_1"
  input: "^train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "freqconv/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/transpose_grad/transpose"
  input: "train/gradients/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Neg"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1152
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/Mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/conv1/conv/BinWeights/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/freqconv/relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/Reshape_grad/Reshape"
  input: "freqconv/relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  input: "conv1/conv/BinWeights/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Mul"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Mul_1"
  op: "Mul"
  input: "conv1/conv/BinWeights/mul_1/x"
  input: "train/gradients/conv1/conv/BinWeights/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Mul_1"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/stack"
  op: "Pack"
  input: "conv1/conv/BinWeights/Tile/multiples"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub"
  op: "Sub"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range"
  op: "Range"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range/start"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Rank"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose"
  op: "Transpose"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/stack"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/transpose"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/range"
  op: "Range"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/range/start"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Size"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/Reshape_grad/Reshape"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Tile_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Reshape_1"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "freqconv/conv1d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/freqconv/relu_grad/ReluGrad"
  input: "train/gradients/freqconv/conv1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Sum"
  input: "conv1/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Neg"
  op: "Neg"
  input: "conv1/conv/BinWeights/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Neg"
  input: "conv1/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv_1"
  input: "conv1/conv/BinWeights/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/conv1/conv/BinWeights/Tile_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/mul"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "freqconv/conv1d/ExpandDims"
  input: "freqconv/conv1d/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/freqconv/conv1d/Conv2D_grad/ShapeN"
  input: "freqconv/conv1d/ExpandDims_1"
  input: "train/gradients/freqconv/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 64
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "freqconv/conv1d/ExpandDims"
  input: "train/gradients/freqconv/conv1d/Conv2D_grad/ShapeN:1"
  input: "train/gradients/freqconv/conv1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 64
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/freqconv/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/freqconv/conv1d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/freqconv/conv1d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/add"
  op: "Add"
  input: "conv1/conv/BinWeights/Sum/reduction_indices"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/mod"
  op: "FloorMod"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/add"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/range"
  op: "Range"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/range/start"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Size"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Fill"
  op: "Fill"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Shape_1"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/range"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/mod"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/DynamicStitch"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Sum_grad/Shape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/truediv_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Reshape"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/freqconv/conv1d/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/freqconv/conv1d/Conv2D_grad/tuple/control_dependency_1"
  input: "train/gradients/freqconv/conv1d/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Abs_grad/Sign"
  op: "Sign"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/Abs_grad/mul"
  op: "Mul"
  input: "train/gradients/conv1/conv/BinWeights/Sum_grad/Tile"
  input: "train/gradients/conv1/conv/BinWeights/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape_2"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "conv1/conv/BinWeights/clip_by_value/Minimum"
  input: "conv1/conv/BinWeights/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Select"
  op: "Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/GreaterEqual"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/zeros"
  input: "train/gradients/conv1/conv/BinWeights/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Select_1"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/clip_by_value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape_2"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "conv1/conv/BinWeights/add"
  input: "conv1/conv/BinWeights/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/LessEqual"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/zeros"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Select"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Select_1"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/add_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/tuple/control_dependency"
  input: "conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Mul"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Mul_1"
  op: "Mul"
  input: "conv1/conv/BinWeights/mul/x"
  input: "train/gradients/conv1/conv/BinWeights/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Mul_1"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Sum_1"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/conv1/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Reshape"
  input: "^train/gradients/conv1/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/conv1/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/Reshape_1"
  input: "^train/gradients/conv1/conv/BinWeights/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/conv1/conv/BinWeights/Abs_grad/mul"
  input: "train/gradients/conv1/conv/BinWeights/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/conv1/conv/BinWeights/Abs_grad/mul"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "freqconv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "freqconv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "freqconv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "freqconv/weights/Adam/Assign"
  op: "Assign"
  input: "freqconv/weights/Adam"
  input: "freqconv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "freqconv/weights/Adam/read"
  op: "Identity"
  input: "freqconv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "freqconv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "freqconv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "freqconv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "freqconv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "freqconv/weights/Adam_1/Assign"
  op: "Assign"
  input: "freqconv/weights/Adam_1"
  input: "freqconv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "freqconv/weights/Adam_1/read"
  op: "Identity"
  input: "freqconv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 2
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam/Assign"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam/read"
  op: "Identity"
  input: "conv1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 2
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "conv1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/weights/Adam_1/read"
  op: "Identity"
  input: "conv1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam/Assign"
  op: "Assign"
  input: "conv1/batchnorm/alpha/Adam"
  input: "conv1/batchnorm/alpha/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam/read"
  op: "Identity"
  input: "conv1/batchnorm/alpha/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam_1/Assign"
  op: "Assign"
  input: "conv1/batchnorm/alpha/Adam_1"
  input: "conv1/batchnorm/alpha/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/alpha/Adam_1/read"
  op: "Identity"
  input: "conv1/batchnorm/alpha/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam/Assign"
  op: "Assign"
  input: "conv1/batchnorm/beta/Adam"
  input: "conv1/batchnorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam/read"
  op: "Identity"
  input: "conv1/batchnorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv1/batchnorm/beta/Adam_1"
  input: "conv1/batchnorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/batchnorm/beta/Adam_1/read"
  op: "Identity"
  input: "conv1/batchnorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam/Assign"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam/read"
  op: "Identity"
  input: "conv2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "conv2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/weights/Adam_1/read"
  op: "Identity"
  input: "conv2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam/Assign"
  op: "Assign"
  input: "conv2/batchnorm/alpha/Adam"
  input: "conv2/batchnorm/alpha/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam/read"
  op: "Identity"
  input: "conv2/batchnorm/alpha/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam_1/Assign"
  op: "Assign"
  input: "conv2/batchnorm/alpha/Adam_1"
  input: "conv2/batchnorm/alpha/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/alpha/Adam_1/read"
  op: "Identity"
  input: "conv2/batchnorm/alpha/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam/Assign"
  op: "Assign"
  input: "conv2/batchnorm/beta/Adam"
  input: "conv2/batchnorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam/read"
  op: "Identity"
  input: "conv2/batchnorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv2/batchnorm/beta/Adam_1"
  input: "conv2/batchnorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/batchnorm/beta/Adam_1/read"
  op: "Identity"
  input: "conv2/batchnorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Adam/Assign"
  op: "Assign"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/Adam/read"
  op: "Identity"
  input: "conv3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv3/weights/Adam_1"
  input: "conv3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/weights/Adam_1/read"
  op: "Identity"
  input: "conv3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam/Assign"
  op: "Assign"
  input: "conv3/batchnorm/alpha/Adam"
  input: "conv3/batchnorm/alpha/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam/read"
  op: "Identity"
  input: "conv3/batchnorm/alpha/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam_1/Assign"
  op: "Assign"
  input: "conv3/batchnorm/alpha/Adam_1"
  input: "conv3/batchnorm/alpha/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/alpha/Adam_1/read"
  op: "Identity"
  input: "conv3/batchnorm/alpha/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam/Assign"
  op: "Assign"
  input: "conv3/batchnorm/beta/Adam"
  input: "conv3/batchnorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam/read"
  op: "Identity"
  input: "conv3/batchnorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv3/batchnorm/beta/Adam_1"
  input: "conv3/batchnorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/batchnorm/beta/Adam_1/read"
  op: "Identity"
  input: "conv3/batchnorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
}
node {
  name: "fc4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "fc4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "fc4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "fc4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/weights/Adam/Assign"
  op: "Assign"
  input: "fc4/weights/Adam"
  input: "fc4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/weights/Adam/read"
  op: "Identity"
  input: "fc4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "fc4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "fc4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "fc4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/weights/Adam_1/Assign"
  op: "Assign"
  input: "fc4/weights/Adam_1"
  input: "fc4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/weights/Adam_1/read"
  op: "Identity"
  input: "fc4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
}
node {
  name: "fc4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/biases/Adam/Assign"
  op: "Assign"
  input: "fc4/biases/Adam"
  input: "fc4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/biases/Adam/read"
  op: "Identity"
  input: "fc4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
}
node {
  name: "fc4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fc4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fc4/biases/Adam_1/Assign"
  op: "Assign"
  input: "fc4/biases/Adam_1"
  input: "fc4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fc4/biases/Adam_1/read"
  op: "Identity"
  input: "fc4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.89999998
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.99900001
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.9999999e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_freqconv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "freqconv/weights"
  input: "freqconv/weights/Adam"
  input: "freqconv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/freqconv/conv1d/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/batchnorm/alpha/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/batchnorm/alpha"
  input: "conv1/batchnorm/alpha/Adam"
  input: "conv1/batchnorm/alpha/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv1/batchnorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/batchnorm/beta"
  input: "conv1/batchnorm/beta/Adam"
  input: "conv1/batchnorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv1/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/batchnorm/alpha/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/batchnorm/alpha"
  input: "conv2/batchnorm/alpha/Adam"
  input: "conv2/batchnorm/alpha/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv2/batchnorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/batchnorm/beta"
  input: "conv2/batchnorm/beta/Adam"
  input: "conv2/batchnorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv2/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/weights"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/batchnorm/alpha/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/batchnorm/alpha"
  input: "conv3/batchnorm/alpha/Adam"
  input: "conv3/batchnorm/alpha/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_conv3/batchnorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv3/batchnorm/beta"
  input: "conv3/batchnorm/beta/Adam"
  input: "conv3/batchnorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/conv3/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fc4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fc4/weights"
  input: "fc4/weights/Adam"
  input: "fc4/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fc4/fc4/BinWeights/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_fc4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "fc4/biases"
  input: "fc4/biases/Adam"
  input: "fc4/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/fc4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_conv1/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv1/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_fc4/biases/ApplyAdam"
  input: "^train/Adam/update_fc4/weights/ApplyAdam"
  input: "^train/Adam/update_freqconv/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_conv1/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv1/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_fc4/biases/ApplyAdam"
  input: "^train/Adam/update_fc4/weights/ApplyAdam"
  input: "^train/Adam/update_freqconv/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_conv1/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv1/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv1/weights/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv2/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv2/weights/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/alpha/ApplyAdam"
  input: "^train/Adam/update_conv3/batchnorm/beta/ApplyAdam"
  input: "^train/Adam/update_conv3/weights/ApplyAdam"
  input: "^train/Adam/update_fc4/biases/ApplyAdam"
  input: "^train/Adam/update_fc4/weights/ApplyAdam"
  input: "^train/Adam/update_freqconv/weights/ApplyAdam"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "fc4/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "groundtruth_input"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "groundtruth_input"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast"
  op: "Cast"
  input: "confusion_matrix/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "global_step/read"
  input: "add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "conv1/batchnorm/alpha"
        string_val: "conv1/batchnorm/alpha/Adam"
        string_val: "conv1/batchnorm/alpha/Adam_1"
        string_val: "conv1/batchnorm/beta"
        string_val: "conv1/batchnorm/beta/Adam"
        string_val: "conv1/batchnorm/beta/Adam_1"
        string_val: "conv1/batchnorm/mean"
        string_val: "conv1/batchnorm/var"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/batchnorm/alpha"
        string_val: "conv2/batchnorm/alpha/Adam"
        string_val: "conv2/batchnorm/alpha/Adam_1"
        string_val: "conv2/batchnorm/beta"
        string_val: "conv2/batchnorm/beta/Adam"
        string_val: "conv2/batchnorm/beta/Adam_1"
        string_val: "conv2/batchnorm/mean"
        string_val: "conv2/batchnorm/var"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "conv3/batchnorm/alpha"
        string_val: "conv3/batchnorm/alpha/Adam"
        string_val: "conv3/batchnorm/alpha/Adam_1"
        string_val: "conv3/batchnorm/beta"
        string_val: "conv3/batchnorm/beta/Adam"
        string_val: "conv3/batchnorm/beta/Adam_1"
        string_val: "conv3/batchnorm/mean"
        string_val: "conv3/batchnorm/var"
        string_val: "conv3/weights"
        string_val: "conv3/weights/Adam"
        string_val: "conv3/weights/Adam_1"
        string_val: "fc4/biases"
        string_val: "fc4/biases/Adam"
        string_val: "fc4/biases/Adam_1"
        string_val: "fc4/weights"
        string_val: "fc4/weights/Adam"
        string_val: "fc4/weights/Adam_1"
        string_val: "freqconv/weights"
        string_val: "freqconv/weights/Adam"
        string_val: "freqconv/weights/Adam_1"
        string_val: "global_step"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "conv1/batchnorm/alpha"
  input: "conv1/batchnorm/alpha/Adam"
  input: "conv1/batchnorm/alpha/Adam_1"
  input: "conv1/batchnorm/beta"
  input: "conv1/batchnorm/beta/Adam"
  input: "conv1/batchnorm/beta/Adam_1"
  input: "conv1/batchnorm/mean"
  input: "conv1/batchnorm/var"
  input: "conv1/weights"
  input: "conv1/weights/Adam"
  input: "conv1/weights/Adam_1"
  input: "conv2/batchnorm/alpha"
  input: "conv2/batchnorm/alpha/Adam"
  input: "conv2/batchnorm/alpha/Adam_1"
  input: "conv2/batchnorm/beta"
  input: "conv2/batchnorm/beta/Adam"
  input: "conv2/batchnorm/beta/Adam_1"
  input: "conv2/batchnorm/mean"
  input: "conv2/batchnorm/var"
  input: "conv2/weights"
  input: "conv2/weights/Adam"
  input: "conv2/weights/Adam_1"
  input: "conv3/batchnorm/alpha"
  input: "conv3/batchnorm/alpha/Adam"
  input: "conv3/batchnorm/alpha/Adam_1"
  input: "conv3/batchnorm/beta"
  input: "conv3/batchnorm/beta/Adam"
  input: "conv3/batchnorm/beta/Adam_1"
  input: "conv3/batchnorm/mean"
  input: "conv3/batchnorm/var"
  input: "conv3/weights"
  input: "conv3/weights/Adam"
  input: "conv3/weights/Adam_1"
  input: "fc4/biases"
  input: "fc4/biases/Adam"
  input: "fc4/biases/Adam_1"
  input: "fc4/weights"
  input: "fc4/weights/Adam"
  input: "fc4/weights/Adam_1"
  input: "freqconv/weights"
  input: "freqconv/weights/Adam"
  input: "freqconv/weights/Adam_1"
  input: "global_step"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "conv1/batchnorm/alpha"
        string_val: "conv1/batchnorm/alpha/Adam"
        string_val: "conv1/batchnorm/alpha/Adam_1"
        string_val: "conv1/batchnorm/beta"
        string_val: "conv1/batchnorm/beta/Adam"
        string_val: "conv1/batchnorm/beta/Adam_1"
        string_val: "conv1/batchnorm/mean"
        string_val: "conv1/batchnorm/var"
        string_val: "conv1/weights"
        string_val: "conv1/weights/Adam"
        string_val: "conv1/weights/Adam_1"
        string_val: "conv2/batchnorm/alpha"
        string_val: "conv2/batchnorm/alpha/Adam"
        string_val: "conv2/batchnorm/alpha/Adam_1"
        string_val: "conv2/batchnorm/beta"
        string_val: "conv2/batchnorm/beta/Adam"
        string_val: "conv2/batchnorm/beta/Adam_1"
        string_val: "conv2/batchnorm/mean"
        string_val: "conv2/batchnorm/var"
        string_val: "conv2/weights"
        string_val: "conv2/weights/Adam"
        string_val: "conv2/weights/Adam_1"
        string_val: "conv3/batchnorm/alpha"
        string_val: "conv3/batchnorm/alpha/Adam"
        string_val: "conv3/batchnorm/alpha/Adam_1"
        string_val: "conv3/batchnorm/beta"
        string_val: "conv3/batchnorm/beta/Adam"
        string_val: "conv3/batchnorm/beta/Adam_1"
        string_val: "conv3/batchnorm/mean"
        string_val: "conv3/batchnorm/var"
        string_val: "conv3/weights"
        string_val: "conv3/weights/Adam"
        string_val: "conv3/weights/Adam_1"
        string_val: "fc4/biases"
        string_val: "fc4/biases/Adam"
        string_val: "fc4/biases/Adam_1"
        string_val: "fc4/weights"
        string_val: "fc4/weights/Adam"
        string_val: "fc4/weights/Adam_1"
        string_val: "freqconv/weights"
        string_val: "freqconv/weights/Adam"
        string_val: "freqconv/weights/Adam_1"
        string_val: "global_step"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "conv1/batchnorm/alpha"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "conv1/batchnorm/alpha/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1/batchnorm/alpha/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1/batchnorm/beta"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1/batchnorm/beta/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/batchnorm/beta/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/batchnorm/mean"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/batchnorm/var"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1/weights"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1/weights/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv1/weights/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2/batchnorm/alpha"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/batchnorm/alpha/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/batchnorm/alpha/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2/batchnorm/beta"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2/batchnorm/beta/Adam"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2/batchnorm/beta/Adam_1"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv2/batchnorm/mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2/batchnorm/var"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2/weights/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2/weights/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv3/batchnorm/alpha"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv3/batchnorm/alpha/Adam"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv3/batchnorm/alpha/Adam_1"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv3/batchnorm/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv3/batchnorm/beta/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv3/batchnorm/beta/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv3/batchnorm/mean"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv3/batchnorm/var"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/batchnorm/var"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv3/weights"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv3/weights/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv3/weights/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "fc4/biases"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "fc4/biases/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "fc4/biases/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "fc4/weights"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "fc4/weights/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "fc4/weights/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fc4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "freqconv/weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "freqconv/weights/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "freqconv/weights/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@freqconv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/batchnorm/alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "freqconv/weights_1"
  input: "freqconv/relu/activations"
  input: "freqconv/relu/sparsity"
  input: "conv1/conv/weights/histogram"
  input: "conv1/conv/BinWeights/BinWeights"
  input: "conv1/conv/Convout"
  input: "conv1/add_2/activations"
  input: "conv1/add_2/sparsity"
  input: "conv2/conv/weights/histogram"
  input: "conv2/conv/BinWeights/BinWeights"
  input: "conv2/conv/Convout"
  input: "conv2/add_2/activations"
  input: "conv2/add_2/sparsity"
  input: "conv3/conv/weights/histogram"
  input: "conv3/conv/BinWeights/BinWeights"
  input: "conv3/conv/Convout"
  input: "conv3/add_2/activations"
  input: "conv3/add_2/sparsity"
  input: "fc4/fc4/weights/histogram"
  input: "fc4/fc4/BinWeights/BinWeights"
  input: "fc4/fc4/Fcout"
  input: "fc4/BiasAdd/activations"
  input: "fc4/BiasAdd/sparsity"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 25
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1/batchnorm/alpha/Adam/Assign"
  input: "^conv1/batchnorm/alpha/Adam_1/Assign"
  input: "^conv1/batchnorm/alpha/Assign"
  input: "^conv1/batchnorm/beta/Adam/Assign"
  input: "^conv1/batchnorm/beta/Adam_1/Assign"
  input: "^conv1/batchnorm/beta/Assign"
  input: "^conv1/batchnorm/mean/Assign"
  input: "^conv1/batchnorm/var/Assign"
  input: "^conv1/weights/Adam/Assign"
  input: "^conv1/weights/Adam_1/Assign"
  input: "^conv1/weights/Assign"
  input: "^conv2/batchnorm/alpha/Adam/Assign"
  input: "^conv2/batchnorm/alpha/Adam_1/Assign"
  input: "^conv2/batchnorm/alpha/Assign"
  input: "^conv2/batchnorm/beta/Adam/Assign"
  input: "^conv2/batchnorm/beta/Adam_1/Assign"
  input: "^conv2/batchnorm/beta/Assign"
  input: "^conv2/batchnorm/mean/Assign"
  input: "^conv2/batchnorm/var/Assign"
  input: "^conv2/weights/Adam/Assign"
  input: "^conv2/weights/Adam_1/Assign"
  input: "^conv2/weights/Assign"
  input: "^conv3/batchnorm/alpha/Adam/Assign"
  input: "^conv3/batchnorm/alpha/Adam_1/Assign"
  input: "^conv3/batchnorm/alpha/Assign"
  input: "^conv3/batchnorm/beta/Adam/Assign"
  input: "^conv3/batchnorm/beta/Adam_1/Assign"
  input: "^conv3/batchnorm/beta/Assign"
  input: "^conv3/batchnorm/mean/Assign"
  input: "^conv3/batchnorm/var/Assign"
  input: "^conv3/weights/Adam/Assign"
  input: "^conv3/weights/Adam_1/Assign"
  input: "^conv3/weights/Assign"
  input: "^fc4/biases/Adam/Assign"
  input: "^fc4/biases/Adam_1/Assign"
  input: "^fc4/biases/Assign"
  input: "^fc4/weights/Adam/Assign"
  input: "^fc4/weights/Adam_1/Assign"
  input: "^fc4/weights/Assign"
  input: "^freqconv/weights/Adam/Assign"
  input: "^freqconv/weights/Adam_1/Assign"
  input: "^freqconv/weights/Assign"
  input: "^global_step/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
versions {
  producer: 27
}
